prototype(Franks.Site:Component.Navigation.LevelRenderer) < prototype(Neos.Fusion:Component) {
    @context.nodeDepth = ${this.node.depth - startingPoint.depth}
    node = ${node}
    itemTitle = ${q(node).property('title')}
    itemClass = Neos.Fusion:RawArray {
        base = 'nav-item'
        level = ${'navigation-item--level-' + nodeDepth}
        current = 'nav-item active current'
        current.@if.isCurrent = ${node == documentNode}
        active = 'nav-item active'
        active.@if.isActive = ${node == documentNode || (nodeDepth != 1 && (q(documentNode).parents('[_identifier = "' + node.identifier + '"]').count() > 0))}
    }
    navigationClass = ${'navigation-level navigation-level--level-' + (nodeDepth + 1)}
    navigationItems = Neos.Fusion:Collection {
        @if.notEmpty = ${this.collection.count() > 0}
        collection = ${q(node).children('[instanceof Neos.Neos:Document][_hidden != TRUE][_hiddenInIndex != TRUE][hideFromMainMenu != TRUE]')}
        itemName = 'node'
        itemRenderer = Franks.Site:Component.Navigation.LevelRenderer
    }

    renderer = afx`
        <li class={props.itemClass}>
            <Carbon.Link:Link title={props.itemTitle} node={node} additionalClass="nav-link" backendLink={true} />
            <ul @if.hasItems={props.navigationItems} class={props.navigationClass}>
                {props.navigationItems}
            </ul>
        </li>
    `
}
